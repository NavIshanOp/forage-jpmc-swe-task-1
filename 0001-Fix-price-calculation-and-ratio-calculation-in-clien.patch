From 23ea420df70de51e51f2c86b15d34a621d1cde28 Mon Sep 17 00:00:00 2001
From: NavIshanOp <ishan.jaiswal@hotmail.com>
Date: Mon, 5 Aug 2024 12:18:35 +0530
Subject: [PATCH] Fix price calculation and ratio calculation in client3.py and
 add unit tests

---
 client3.py     | 37 ++++++++-------------------------
 client_test.py | 56 +++++++++++++++++++++++++++++++++++---------------
 2 files changed, 47 insertions(+), 46 deletions(-)

diff --git a/client3.py b/client3.py
index 0a0267f..808c924 100644
--- a/client3.py
+++ b/client3.py
@@ -1,23 +1,3 @@
-################################################################################
-#
-#  Permission is hereby granted, free of charge, to any person obtaining a
-#  copy of this software and associated documentation files (the "Software"),
-#  to deal in the Software without restriction, including without limitation
-#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
-#  and/or sell copies of the Software, and to permit persons to whom the
-#  Software is furnished to do so, subject to the following conditions:
-#
-#  The above copyright notice and this permission notice shall be included in
-#  all copies or substantial portions of the Software.
-#
-#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-#  DEALINGS IN THE SOFTWARE.
-
 import json
 import random
 import urllib.request
@@ -28,22 +8,19 @@ QUERY = "http://localhost:8080/query?id={}"
 # 500 server request
 N = 500
 
-
 def getDataPoint(quote):
     """ Produce all the needed values to generate a datapoint """
-    """ ------------- Update this function ------------- """
     stock = quote['stock']
     bid_price = float(quote['top_bid']['price'])
     ask_price = float(quote['top_ask']['price'])
-    price = bid_price
+    price = (bid_price + ask_price) / 2
     return stock, bid_price, ask_price, price
 
-
 def getRatio(price_a, price_b):
     """ Get ratio of price_a and price_b """
-    """ ------------- Update this function ------------- """
-    return 1
-
+    if price_b == 0:
+        return
+    return price_a / price_b
 
 # Main
 if __name__ == "__main__":
@@ -51,9 +28,11 @@ if __name__ == "__main__":
     for _ in iter(range(N)):
         quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
 
-        """ ----------- Update to get the ratio --------------- """
+        prices = {}
         for quote in quotes:
             stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
             print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-        print("Ratio %s" % getRatio(price, price))
\ No newline at end of file
+        if 'ABC' in prices and 'DEF' in prices:
+            print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index 9d6b3b2..0bffc8b 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,25 +1,47 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
 
-class ClientTest(unittest.TestCase):
-  def test_getDataPoint_calculatePrice(self):
-    quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+class Client3Test(unittest.TestCase):
 
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint(self):
+        quote = {
+            'stock': 'ABC',
+            'top_bid': {'price': 120.48},
+            'top_ask': {'price': 121.2}
+        }
+        stock, bid_price, ask_price, price = getDataPoint(quote)
+        self.assertEqual(stock, 'ABC')
+        self.assertEqual(bid_price, 120.48)
+        self.assertEqual(ask_price, 121.2)
+        self.assertEqual(price, (120.48 + 121.2) / 2)
 
+    def test_getDataPoint_with_different_data(self):
+        quote = {
+            'stock': 'DEF',
+            'top_bid': {'price': 130.48},
+            'top_ask': {'price': 131.2}
+        }
+        stock, bid_price, ask_price, price = getDataPoint(quote)
+        self.assertEqual(stock, 'DEF')
+        self.assertEqual(bid_price, 130.48)
+        self.assertEqual(ask_price, 131.2)
+        self.assertEqual(price, (130.48 + 131.2) / 2)
 
-  """ ------------ Add more unit tests ------------ """
+    def test_getRatio(self):
+        price_a = 120.48
+        price_b = 121.2
+        ratio = getRatio(price_a, price_b)
+        self.assertEqual(ratio, price_a / price_b)
 
+        price_b = 0
+        ratio = getRatio(price_a, price_b)
+        self.assertIsNone(ratio)
 
+    def test_getRatio_with_zero_prices(self):
+        price_a = 0
+        price_b = 0
+        ratio = getRatio(price_a, price_b)
+        self.assertIsNone(ratio)
 
-if __name__ == '__main__':
-    unittest.main()
\ No newline at end of file
+if __name__ == "__main__":
+    unittest.main()
-- 
2.46.0.windows.1

